<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大雄の寶藏屋</title>
  
  
  <link href="https://leohu99.github.io/atom.xml" rel="self"/>
  
  <link href="https://leohu99.github.io/"/>
  <updated>2020-12-07T10:54:56.285Z</updated>
  <id>https://leohu99.github.io/</id>
  
  <author>
    <name>Leon Hu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BGP路径选择与路由聚合</title>
    <link href="https://leohu99.github.io/2020/12/07/BGP%E8%B7%AF%E5%BE%84%E9%80%89%E6%8B%A9%E4%B8%8E%E8%B7%AF%E7%94%B1%E8%81%9A%E5%90%88/"/>
    <id>https://leohu99.github.io/2020/12/07/BGP%E8%B7%AF%E5%BE%84%E9%80%89%E6%8B%A9%E4%B8%8E%E8%B7%AF%E7%94%B1%E8%81%9A%E5%90%88/</id>
    <published>2020-12-07T07:27:02.000Z</published>
    <updated>2020-12-07T10:54:56.285Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这是一张拓扑图及要求"><a href="#这是一张拓扑图及要求" class="headerlink" title="这是一张拓扑图及要求"></a>这是一张拓扑图及要求</h1><p><img src= "/img/loading.gif" data-lazy-src="03.png"></p><h1 id="实施步骤"><a href="#实施步骤" class="headerlink" title="实施步骤"></a>实施步骤</h1><h2 id="rip区域"><a href="#rip区域" class="headerlink" title="rip区域"></a>rip区域</h2><p>路由选择信息协议（<a href="https://zhuanlan.zhihu.com/p/146775909">RIP</a>）是一种距离向量路由选择协议，用于自治系统（AS）内的路由信息的传递。</p><p>r1的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r1]ip route-static 4.4.4.4 32 11.3.3.2  #配置静态路由，让11.3.3.2的IP访问到此路由时跳到4.4.4.4接收</span><br><span class="line">[r1]rip 1         #进入rip组</span><br><span class="line">[r1-rip-1]version 2     #rip 版本</span><br><span class="line">[r1-rip-1]network 1.0.0.0     #宣告直连网段</span><br><span class="line">[r1-rip-1]network 10.0.0.0    #宣告直连网段</span><br></pre></td></tr></table></figure><p>r2的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r1]ip route-static 4.4.4.4 32 11.4.4.2</span><br><span class="line">[r2]rip 1</span><br><span class="line">[r2-rip-1]version 2</span><br><span class="line">[r2-rip-1]network 2.0.0.0   </span><br><span class="line">[r2-rip-1]network 10.0.0.0   </span><br></pre></td></tr></table></figure><p>r3的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r3]rip 1</span><br><span class="line">[r3-rip-1]version 2</span><br><span class="line">[r3-rip-1]network 3.0.0.0</span><br><span class="line">[r3-rip-1]network 10.0.0.0</span><br><span class="line">[r3-rip-1]network 192.168.1.0</span><br><span class="line">[r3-rip-1]network 192.168.2.0</span><br><span class="line">[r3-rip-1]network 192.168.3.0</span><br></pre></td></tr></table></figure><p>rip区域的部分就已经配置完成了，然后我们就来配置ospf</p><h2 id="ospf区域"><a href="#ospf区域" class="headerlink" title="ospf区域"></a>ospf区域</h2><p>优先开放最短路径（<a href="https://blog.csdn.net/zyhyg_123/article/details/85017994">OSPF</a>）是一种链路状态路由选择协议，它优于RIP。OSPF是Internet网中最常用的内部网关协议，但OSI IS－IS协议也用于Internet。该协议在单一自治系统（AS）内部工作。</p><p>r4的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r4]ip route-static 1.1.1.1 32 11.3.3.1 #配置静态路由</span><br><span class="line">[r4]ip route-static 2.2.2.2 32 11.4.4.2</span><br><span class="line">[r4]ospf 1 router-id 4.4.4.4     #配置ospf的id，可把&quot;router-id *.*.*.*&quot;删除</span><br><span class="line">[r4-ospf-1]area 0    #配置ospf的区域</span><br><span class="line">[r4-ospf-1-area-0.0.0.0]network 4.4.4.4 0.0.0.0  #宣告直连网段，该写法为指定此IP，后面的掩码就填0.0.0.0</span><br><span class="line">[r4-ospf-1-area-0.0.0.0]network 172.16.1.1 0.0.0.0</span><br><span class="line">[r4-ospf-1-area-0.0.0.0]network 172.16.2.1 0.0.0.0</span><br><span class="line">[r4-ospf-1-area-0.0.0.0]network 12.1.1.1 0.0.0.0</span><br></pre></td></tr></table></figure><p>r5的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r5]ip route-static 1.1.1.1 32 11.3.3.1</span><br><span class="line">[r5]ip route-static 2.2.2.2 32 11.4.4.2</span><br><span class="line">[r5]ospf 1 router-id 5.5.5.5</span><br><span class="line">[r5-ospf-1]area 0</span><br><span class="line">[r5-ospf-1-area-0.0.0.0]network 172.16.3.1 0.0.0.0</span><br><span class="line">[r5-ospf-1-area-0.0.0.0]network 172.16.4.1 0.0.0.0</span><br><span class="line">[r5-ospf-1-area-0.0.0.0]network 12.1.1.2 0.0.0.0</span><br></pre></td></tr></table></figure><h2 id="配置BGP路由"><a href="#配置BGP路由" class="headerlink" title="配置BGP路由"></a>配置BGP路由</h2><p>边界网关协议(<a href="https://blog.csdn.net/weixin_44907813/article/details/102709217">BGP</a>)是一种实现自治系统AS（Autonomous System）之间的路由可达，并选择最佳路由的距离矢量路由协议。</p><p>r1的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r1]bgp 100    #进入bgp设置编号为100</span><br><span class="line">[r1-bgp]peer 2.2.2.2 as-number 100   #指定对端的Loopback地址，“100”是对路由器所在的BGP编号</span><br><span class="line">[r1-bgp]peer 2.2.2.2 connect-interface loopback0   #指明对端的这个地址是哪个loopback接口</span><br><span class="line">[r1-bgp]peer 2.2.2.2 next-hop-local #改变邻居传递路由时，宣称所有传给邻居的路由条目，下一跳都是自己</span><br><span class="line">[r1-bgp]peer 3.3.3.3 as-number 100</span><br><span class="line">[r1-bgp]peer 3.3.3.3 con loop0</span><br><span class="line">[r1-bgp]peer 3.3.3.3 next-hop-local</span><br><span class="line">[r1-bgp]peer 4.4.4.4 as-number 200</span><br><span class="line">[r1-bgp]peer 4.4.4.4 ebgp-max-hop 2  #指明跳数为2，可以理解为TTL&#x3D;2</span><br><span class="line">[r1-bgp]peer 4.4.4.4 con loop0</span><br></pre></td></tr></table></figure><p>r2的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r2]bgp 100</span><br><span class="line">[r2-bgp]peer 1.1.1.1 as-number 100</span><br><span class="line">[r2-bgp]peer 1.1.1.1 con loop0</span><br><span class="line">[r2-bgp]peer 1.1.1.1 next-hop-local</span><br><span class="line">[r2-bgp]peer 3.3.3.3 as-number 100</span><br><span class="line">[r2-bgp]peer 3.3.3.3 con loop0</span><br><span class="line">[r2-bgp]peer 3.3.3.3 next-hop-local</span><br><span class="line">[r2-bgp]peer 4.4.4.4 as-number 200</span><br><span class="line">[r2-bgp]peer 4.4.4.4 ebgp-max-hop 2</span><br><span class="line">[r2-bgp]peer 4.4.4.4 con loop0</span><br></pre></td></tr></table></figure><p>r3的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r3]bgp 100</span><br><span class="line">[r3-bgp]peer 1.1.1.1 as-number 100</span><br><span class="line">[r3-bgp]peer 1.1.1.1 con loop0</span><br><span class="line">[r3-bgp]peer 2.2.2.2 as-number 100</span><br><span class="line">[r3-bgp]peer 2.2.2.2 con loop0</span><br><span class="line">[r3-bgp]net 10.1.1.0 255.255.255.0    #宣告直连网段</span><br><span class="line">[r3-bgp]net 10.2.2.0 255.255.255.0</span><br><span class="line">[r3-bgp]net 192.168.1.0 255.255.255.0</span><br></pre></td></tr></table></figure><p>r4的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r4]bgp 200</span><br><span class="line">[r4-bgp]peer 1.1.1.1 as-number 100</span><br><span class="line">[r4-bgp]peer 1.1.1.1 con loop0</span><br><span class="line">[r4-bgp]peer 1.1.1.1 ebgp-max-hop 2</span><br><span class="line">[r4-bgp]peer 2.2.2.2 as-number 100</span><br><span class="line">[r4-bgp]peer 2.2.2.2 con loop0</span><br><span class="line">[r4-bgp]peer 2.2.2.2 ebgp-max-hop 2</span><br><span class="line">[r4-bgp]net 11.3.3.0 24</span><br><span class="line">[r4-bgp]net 11.4.4.0 24</span><br><span class="line">[r4-bgp]net 12.1.1.0 24</span><br><span class="line">[r4-bgp]net 172.16.1.0 24</span><br><span class="line">[r4-bgp]net 172.16.2.0 24</span><br><span class="line">[r4-bgp]peer 12.1.1.2 as-number 200</span><br></pre></td></tr></table></figure><p>r5的配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r5]bgp 200</span><br><span class="line">[r5-bgp]peer 12.1.1.1 as-number 100</span><br><span class="line">[r5-bgp]net 172.16.3.0 24</span><br><span class="line">[r5-bgp]net 172.16.4.0 24</span><br><span class="line">[r5-bgp]net </span><br></pre></td></tr></table></figure><p>好啦<del>基本都已经配置完毕了<br>~我不想写了</del><br><del>嘤嘤嘤</del></p><h2 id="策略配置"><a href="#策略配置" class="headerlink" title="策略配置"></a>策略配置</h2><p>只需要在r3上动手脚就完事了</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[r3]ip ip-prefix h1 index 10 permit 172.16.2.1 24</span><br><span class="line"># 这个表项指定地址前缀列表的名称为h1，指定本匹配项在地址前缀列表中的序号为10，指定地址前缀列表的匹配模式为允许。在该模式下如果过滤的iP地址在定义的范围内,则通过过滤,进行相应的设置,否则,必须进行下一节点的测试。</span><br><span class="line">[r3]ip ip-prefix h1 index 10 permit 172.16.4.1 24</span><br><span class="line">[r3]route-policy y1 permit node 10</span><br><span class="line"># 一个Route-Policy可以由多个节点（node）构成。</span><br><span class="line"># 创建一个路由策略名字为h1，指定Route-Policy的节点号为10。当使用Route-Policy时，node的值小的节点先进行匹配。一个节点匹配成功后，路由将不再匹配其他节点。全部节点匹配失败后，路由将被过滤。</span><br><span class="line">[r3-route-policy]if-match ip-prefix h1 #命令用来创建一个基于IP地址前缀列表的匹配规则</span><br><span class="line">[r3-route-policy]apply preferred-value 100  #命令用来在路由策略中配置改变BGP路由的首选值的动作</span><br><span class="line">[r3-route-policy]quit</span><br><span class="line">[r3]route-policy y1 permit node 20</span><br><span class="line">[r3-route-policy]quit</span><br><span class="line">[r3]bgp 100</span><br><span class="line">[r3-bgp]peer 2.2.2.2 route-policy y1 import</span><br><span class="line"></span><br><span class="line">[r3]ip ip-prefix jh2 index 10 permit 192.168.3.0 24</span><br><span class="line">[r3]route-policy jh1 permit node 10</span><br><span class="line">[r3-route-policy]if-match ip-prefix jh2</span><br><span class="line">[r3-route-policy]quit</span><br><span class="line">[r3]bgp 100</span><br><span class="line">[r3-bgp]aggregate 192.168.0.0 255.255.248.0 suppress-policy jh2  #在BGP路由表中指定聚合路由的IPv4地址并抑制jh2路由通告。</span><br></pre></td></tr></table></figure><p>到这里已经全部配置结束了。<br>多参考一下华为官网~<br>关于交换机<a href="https://support.huawei.com/enterprise/zh/doc/EDOC1100126908/d13492c7">S7700 V200R019C10 命令参考</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这是一张拓扑图及要求&quot;&gt;&lt;a href=&quot;#这是一张拓扑图及要求&quot; class=&quot;headerlink&quot; title=&quot;这是一张拓扑图及要求&quot;&gt;&lt;/a&gt;这是一张拓扑图及要求&lt;/h1&gt;&lt;p&gt;&lt;img src= &quot;/img/loading.gif&quot; data-lazy</summary>
      
    
    
    
    <category term="HCIP" scheme="https://leohu99.github.io/categories/HCIP/"/>
    
    
    <category term="storage" scheme="https://leohu99.github.io/tags/storage/"/>
    
    <category term="华为路由交换技术" scheme="https://leohu99.github.io/tags/%E5%8D%8E%E4%B8%BA%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E6%8A%80%E6%9C%AF/"/>
    
    <category term="BGP" scheme="https://leohu99.github.io/tags/BGP/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统文件以及文件夹权限的作用</title>
    <link href="https://leohu99.github.io/2020/12/02/Linux%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%E4%BB%A5%E5%8F%8A%E6%96%87%E4%BB%B6%E5%A4%B9%E6%9D%83%E9%99%90%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
    <id>https://leohu99.github.io/2020/12/02/Linux%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%E4%BB%A5%E5%8F%8A%E6%96%87%E4%BB%B6%E5%A4%B9%E6%9D%83%E9%99%90%E7%9A%84%E4%BD%9C%E7%94%A8/</id>
    <published>2020-12-01T16:45:20.000Z</published>
    <updated>2020-12-01T19:19:29.005Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Linux文件权限详解"><a href="#1-Linux文件权限详解" class="headerlink" title="1. Linux文件权限详解"></a>1. Linux文件权限详解</h2><p>Linux系统中不仅是对用户与组根据UID,GID进行了管理，还对Linux系统中的文件，按照用户与组进行分类，针对不同的群体进行了权限管理，用他来确定谁能通过何种方式对文件和目录进行访问和操作。</p><ol><li><p>文件的权限针对三类对象进行定义<br> owner 属主，缩写u<br> group 属组，缩写g<br> other 其他，缩写o<br> all 全部(包括u，g和o)，缩写a<br><img src= "/img/loading.gif" data-lazy-src="03.png"></p></li><li><p>每个文件/文件夹针对每类访问者定义了三种主要权限<br> r：Read，读取，权限值为4。</p><pre><code> 文件: 具有读取文件内容的权限。 目录: 具有浏览目录的权限。</code></pre><p> w：Write，写入，权限值为2。</p><pre><code> 文件: 具有新增、修改文件内容的权限。 目录: 具有删除、移动目录内文件的权限。</code></pre><p> x：eXecute，执行，权限值为1。</p><pre><code> 文件: 文件可以作为程序执行。 目录: 该用户具有进入目录的权限。</code></pre><p><img src= "/img/loading.gif" data-lazy-src="04.png"></p></li></ol><p><font color=#ff0000>root账户不受文件权限的读写限制，执行权限受限制</font></p><h2 id="2-修改文件和文件夹对应用户的操作权限"><a href="#2-修改文件和文件夹对应用户的操作权限" class="headerlink" title="2. 修改文件和文件夹对应用户的操作权限"></a>2. 修改文件和文件夹对应用户的操作权限</h2><ul><li>chmod 修改权限 change mode<br>  方法1：mode法<br>  格式：chmod who opt per file</li></ul><table><thead><tr><th align="center">who</th><th align="center">opt</th><th align="center">per</th></tr></thead><tbody><tr><td align="center">u 表示“用户（user）”，即文件或目录的所有者</td><td align="center">+ 添加某个权限</td><td align="center">r 可读</td></tr><tr><td align="center">g 表示“同组（group）用户”，即与文件属主有相同组ID的所有用户</td><td align="center">- 取消某个权限</td><td align="center">w 可写</td></tr><tr><td align="center">o 表示“其他（others）用户”</td><td align="center">= 赋予给定权限并取消其他所有权限（如果有的话）</td><td align="center">x 可执行</td></tr><tr><td align="center">a 表示“所有（all）用户”。它是系统默认值</td><td align="center">-</td><td align="center">X 只有目标文件对某些用户是可执行的或该目标文件是目录时才追加x 属性</td></tr><tr><td align="center">–</td><td align="center">-</td><td align="center">s 在文件执行时把进程的属主或组ID置为该文件的文件属主(方式“u＋s”设置文件的用户ID位，“g＋s”设置组ID位。)</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ chmod a+r file 表示对所有对象增加读取权限</span><br><span class="line">$ chmod g+r，o+r file 使同组和其他用户对文件file有读权限</span><br></pre></td></tr></table></figure><ul><li>数字法<br>  格式：chmod XXX file</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rwx rw- r--</span><br><span class="line">111 110 100</span><br><span class="line">7   6   4</span><br><span class="line"></span><br><span class="line">r:4</span><br><span class="line">w:2</span><br><span class="line">x:1</span><br><span class="line">$ chmod 777 file 表示file文件允许所有对象拥有该文件的所有权限</span><br></pre></td></tr></table></figure><p>好啦，本次浅谈了解了一下Linux文件的权限以及配置~<br>深度了解点<a href="https://blog.csdn.net/lv8549510/article/details/85406215">这里</a></p><ul><li>参考资料<br><a href="https://blog.csdn.net/bmbm546/article/details/6875972">ight546</a><br><a href="https://blog.csdn.net/zbj18314469395/article/details/106624540">软测小生</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Linux文件权限详解&quot;&gt;&lt;a href=&quot;#1-Linux文件权限详解&quot; class=&quot;headerlink&quot; title=&quot;1. Linux文件权限详解&quot;&gt;&lt;/a&gt;1. Linux文件权限详解&lt;/h2&gt;&lt;p&gt;Linux系统中不仅是对用户与组根据UID,GI</summary>
      
    
    
    
    <category term="linux" scheme="https://leohu99.github.io/categories/linux/"/>
    
    
    <category term="centos" scheme="https://leohu99.github.io/tags/centos/"/>
    
    <category term="storage" scheme="https://leohu99.github.io/tags/storage/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7.7搭建NFS（网络文件系统）服务</title>
    <link href="https://leohu99.github.io/2020/12/01/CentOS7-7%E6%90%AD%E5%BB%BANFS%EF%BC%88%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%EF%BC%89%E6%9C%8D%E5%8A%A1/"/>
    <id>https://leohu99.github.io/2020/12/01/CentOS7-7%E6%90%AD%E5%BB%BANFS%EF%BC%88%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%EF%BC%89%E6%9C%8D%E5%8A%A1/</id>
    <published>2020-11-30T18:13:36.000Z</published>
    <updated>2020-12-01T12:09:30.157Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-NFS简介"><a href="#1-NFS简介" class="headerlink" title="1. NFS简介"></a>1. NFS简介</h2><blockquote><p><a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/9719420?fromtitle=NFS&fromid=812203&fr=aladdin">NFS（英语：Network File System，即网络文件系统）是一种分布式文件系统，力求客户端主机可以访问服务器端文件，并且其过程与访问本地存储时一样，它由Sun微系统（已被甲骨文公司收购）开发，于1984年发布。它基于开放网络运算远程过程调用（ONC RPC）系统：一个开放、标准的RFC系统，任何人或组织都可以依据标准实现它。</a></p></blockquote><p>NFS 在文件传送或信息传送过程中依赖于 RPC（Remote Procedure Call） 协议，即远程过程调用， NFS 的各项功能都必须要向 RPC 来注册，如此一来 RPC 才能了解 NFS 这个服务的各项功能 Port、PID、NFS 在服务器所监听的 IP 等，而客户端才能够透过 RPC 的询问找到正确对应的端口，所以，NFS 必须要有 RPC 存在时才能成功的提供服务，简单的理解二者关系：NFS是 一个文件存储系统，而 RPC 是负责信息的传输。</p><h2 id="2-环境、软件准备"><a href="#2-环境、软件准备" class="headerlink" title="2. 环境、软件准备"></a>2. 环境、软件准备</h2><p>由于我没有这么多资源(<del>嗯对，我就是穷</del>)…所以我只能选择：</p><ul><li>VMware Workstation Pro<ul><li>CentOS Linux 7 （服务端）<ul><li>rpcbind</li><li>nfs-utils</li></ul></li><li>CentOS Linux 7 （客户端）<ul><li>nfs-utils</li></ul></li></ul></li></ul><h2 id="3-网络规划"><a href="#3-网络规划" class="headerlink" title="3. 网络规划"></a>3. 网络规划</h2><table><thead><tr><th align="center">主机名</th><th align="center">IP</th></tr></thead><tbody><tr><td align="center">nfs（服务端）</td><td align="center">192.168.2.200</td></tr><tr><td align="center">master（客户端）</td><td align="center">192.168.2.19</td></tr></tbody></table><h2 id="4-NFS服务的安装"><a href="#4-NFS服务的安装" class="headerlink" title="4. NFS服务的安装"></a>4. NFS服务的安装</h2><p>首先检查一下服务端是否安装了NFS</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@nfs ~]$ rpm -qa nfs-utils rpcbind</span><br><span class="line">rpm -qa nfs-utils rpcbind</span><br><span class="line">nfs-utils-1.3.0-0.68.el7.x86_64</span><br></pre></td></tr></table></figure><p>如果出现了这些信息说明你已经安装好了NFS服务，如果空的就说明没有安装。</p><p>安装NFS服务</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 服务端</span></span><br><span class="line">[root@nfs ~]$ yum -y install nfs-utils rpcbind</span><br><span class="line"><span class="comment"># 客户端</span></span><br><span class="line">[root@master ~]$ yum -y install nfs-utils</span><br></pre></td></tr></table></figure><h2 id="5-NFS配置"><a href="#5-NFS配置" class="headerlink" title="5. NFS配置"></a>5. NFS配置</h2><p>在真实的生产环境中，我们不可能关闭防火墙来让 NFS 正常运行的，所以为了确保NFS服务能正常的运行我们需要去配置防火墙让其通过正常运行。</p><p>配置防火墙开启相对应的端口<code>--permanent</code>表示永久开启此端口</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --add-service=nfs --permanent</span><br><span class="line">firewall-cmd --add-service=rpc-bind --permanent</span><br><span class="line">firewall-cmd --add-service=mountd --permanent</span><br></pre></td></tr></table></figure><p><em><font color=#0000FF>如果你有其他更好的办法你可以告诉我哦~</font></em></p><p>在服务端创建一个共享目录<code>/data/folder</code>,作为客户端挂载的远端入口，然后设置权限，之后再修改NFS配置文件。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@nfs ~]$ mkdir -p /data/folder</span><br><span class="line">[root@nfs ~]$ chmod 777 /data/folder</span><br><span class="line">[root@nfs ~]$ vim /etc/exports</span><br><span class="line">/data/folder 192.168.2.0/24(rw,sync,insecure,no_subtree_check,no_root_squash)</span><br></pre></td></tr></table></figure><p><strong><font color=#ff0000> tips: <code>exports</code>这个文件是需要自己手动创建的。</font></strong></p><p>这里配置后边有很多参数，每个参数有不同的含义，具体可以参考下边。我配置的是将<code>/data/folder</code>文件目录设置为允许 IP 为该<code>192.168.2.0</code>区间的客户端挂载，如果客户端的 IP 不在该区间也想要挂载的话，可以设置 IP 区间更大或者直接设置为<code>*</code> 允许所有客户端挂载，例如：<code>/data *(rw,sync,insecure,no_subtree_check,no_root_squash)</code> 设置<code>/data</code> 目录允许所有客户端读写挂载。</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">ro</td><td align="center">只读访问</td></tr><tr><td align="center">rw</td><td align="center">读写访问</td></tr><tr><td align="center">sync</td><td align="center">所有数据在请求时写入共享</td></tr><tr><td align="center">async</td><td align="center">nfs 在写入数据前可以响应请求</td></tr><tr><td align="center">secure</td><td align="center">nfs 通过 1024 以下的安全 TCP/IP 端口发送</td></tr><tr><td align="center">insecure</td><td align="center">nfs 通过 1024 以上的端口发送</td></tr><tr><td align="center">wdelay</td><td align="center">如果多个用户要写入 nfs 目录，则归组写入（默认）</td></tr><tr><td align="center">no_wdelay</td><td align="center">如果多个用户要写入 nfs 目录，则立即写入，当使用 async 时，无需此设置</td></tr><tr><td align="center">hide</td><td align="center">在 nfs 共享目录中不共享其子目录</td></tr><tr><td align="center">no_hide</td><td align="center">共享 nfs 目录的子目录</td></tr><tr><td align="center">subtree_check</td><td align="center">如果共享 /usr/bin 之类的子目录时，强制 nfs 检查父目录的权限（默认）</td></tr><tr><td align="center">no_subtree_check</td><td align="center">不检查父目录权限</td></tr><tr><td align="center">all_squash</td><td align="center">共享文件的 UID 和 GID 映射匿名用户 anonymous，适合公用目录</td></tr><tr><td align="center">no_all_squash</td><td align="center">保留共享文件的 UID 和 GID（默认）</td></tr><tr><td align="center">root_squash</td><td align="center">root 用户的所有请求映射成如 anonymous 用户一样的权限（默认）</td></tr><tr><td align="center">no_root_squash</td><td align="center">root 用户具有根目录的完全管理访问权限</td></tr><tr><td align="center">anonuid=xxx</td><td align="center">指定 nfs 服务器 /etc/passwd 文件中匿名用户的 UID</td></tr><tr><td align="center">anongid=xxx</td><td align="center">指定 nfs 服务器 /etc/passwd 文件中匿名用户的 GID</td></tr></tbody></table><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>先启动 RPC 服务和 NFS 服务</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@nfs ~]$ systemctl <span class="built_in">enable</span> rpcbind</span><br><span class="line"><span class="comment"># rpcbind软件开机自动启动运行，可以不设置，你开心就好</span></span><br><span class="line">[root@nfs ~]$ systemctl restart rpcbind</span><br><span class="line"><span class="comment"># 或者可以使用以下任一命令都可以~ 你开心就好~</span></span><br><span class="line">service rpcbind start</span><br><span class="line">/bin/systemctl start rpcbind.service</span><br><span class="line"></span><br><span class="line">[root@nfs ~]$ systemctl <span class="built_in">enable</span> nfs</span><br><span class="line"><span class="comment"># NFS软件开机自动启动运行，可以不设置，你开心就好</span></span><br><span class="line">[root@nfs ~]$ systemctl restart nfs</span><br><span class="line"><span class="comment"># 或者可以使用以下任一命令都可以~ 你开心就好~</span></span><br><span class="line">service nfs start</span><br><span class="line">/bin/systemctl start nfs.service</span><br><span class="line"></span><br><span class="line">启动 NFS 服务后 rpc 服务已经启用了对 NFS 的端口映射列表</span><br><span class="line">[root@nfs ~]$ rpcinfo -p localhost</span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    4   tcp    111  portmapper</span><br><span class="line">    100000    3   tcp    111  portmapper</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    4   udp    111  portmapper</span><br><span class="line">    100000    3   udp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100005    1   udp  30003  mountd</span><br><span class="line">    100005    2   udp  30003  mountd</span><br><span class="line">    100005    3   udp  30003  mountd</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    3   tcp   2049  nfs_acl</span><br><span class="line">    100003    3   udp   2049  nfs</span><br><span class="line">    100003    4   udp   2049  nfs</span><br><span class="line">    100227    3   udp   2049  nfs_acl</span><br><span class="line">    100021    1   udp  30002  nlockmgr</span><br><span class="line">    100021    3   udp  30002  nlockmgr</span><br><span class="line">    100021    4   udp  30002  nlockmgr</span><br><span class="line">    100021    1   tcp  30002  nlockmgr</span><br><span class="line">    100021    3   tcp  30002  nlockmgr</span><br><span class="line">    100021    4   tcp  30002  nlockmgr</span><br></pre></td></tr></table></figure><p>好，现在 NFS 服务已经起来了，然后看看是否正确加载了设置的<code>/etc/exports</code>配置。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@nfs ~]$ showmount -e localhost</span><br><span class="line">Export list <span class="keyword">for</span> localhost:</span><br><span class="line">/data/folder 192.168.2.0/24</span><br></pre></td></tr></table></figure><p>服务端已检查没有问题。</p><h2 id="6-NFS-测试"><a href="#6-NFS-测试" class="headerlink" title="6. NFS 测试"></a>6. NFS 测试</h2><p>最后，在另一台虚拟机上测试一下，是否能够正确挂载吧。首先，我们可以在客户端(master)查看下服务端(nfs服务端 IP 为：192.168.2.200) 设置可共享的目录信息。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@master ~]$ showmount -e 192.168.2.200</span><br><span class="line">Export list <span class="keyword">for</span> 192.168.2.200:</span><br><span class="line">/data/folder 192.168.2.0/24</span><br></pre></td></tr></table></figure><p>客户端可以查看就说明已经没有问题了，然后我们在客户端上创建一个目录<code>/folder</code>用来挂载</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@master ~]$ mkdir -p /folder</span><br><span class="line">[root@master ~]$ mount 192.168.2.200:/data/folder /folder</span><br><span class="line">[root@master ~]$ df -h | grep 192.168.2.200</span><br><span class="line">192.168.2.200:/data/folder   17G  2.4G   15G   14% /folder</span><br></pre></td></tr></table></figure><p>可以看到，可以正确将远端 NFS 目录挂载到本地。注意：挂载点 <code>/folder</code> 目录必须已经存在，而且目录中没有文件或子目录。</p><p>最后，我们在 NFS 服务端 <code>/data/folder</code> 目录下创建一个文件，看下客户端是否能够正确读取并修改。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 服务端添加文本</span></span><br><span class="line">[root@nfs ~]$ <span class="built_in">echo</span> <span class="string">&quot;Hi! This is NFS server.&quot;</span> &gt; /data/folder/nfs_server.txt</span><br><span class="line">[root@nfs ~]$ ll /data/folder/</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r--. 1 root root 24 Nov 30 18:04 nfs_server.txt</span><br><span class="line"><span class="comment"># 客户端查看</span></span><br><span class="line">[root@master ~]$ ll /folder/</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r--. 1 root root 24 Nov 30 18:04 nfs_server.txt</span><br><span class="line">[root@master ~]$ cat /folder/nfs_server.txt</span><br><span class="line">Hi! This is NFS server.</span><br><span class="line"><span class="comment"># 客户端添加内容并查看</span></span><br><span class="line">[root@master ~]$ <span class="built_in">echo</span> <span class="string">&quot;I changed your text, master.&quot;</span> &gt;&gt; /folder/nfs_server.txt</span><br><span class="line">[root@master ~]$ cat /folder/nfs_server.txt</span><br><span class="line">Hi! This is NFS server.</span><br><span class="line">I changed your text, master.</span><br><span class="line"><span class="comment"># 服务端查看</span></span><br><span class="line">[root@nfs ~]$ cat /data/folder/nfs_server.txt</span><br><span class="line">Hi! This is NFS server.</span><br><span class="line">I changed your text, master.</span><br></pre></td></tr></table></figure><p>这里提一下，NFS 默认使用用 UDP 协议来进行挂载，为了提高 NFS 的稳定性，可以使用 TCP 协议挂载，命令如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@master ~]$ mount 192.168.2.200:/data/share /share -o proto=tcp -o nolock</span><br></pre></td></tr></table></figure><p>最后，客户端卸载NFS挂载。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@master ~]$ umount /folder</span><br></pre></td></tr></table></figure><p>好了，以上就是简单介绍了 NFS 安装及配置使用。</p><p>这里附加个Windows 10的挂载方法：<br>首先，系统版本是专业版或者企业版(家庭版不支持该功能)<br>Windows 10 Pro Insider Preview 10074 (x64)迅雷下载地址</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="">点我查看    </button><span class="hide-content"><p>ed2k://|file|cn_windows_10_pro_insider_preview_10074_x86_dvd_6651164.iso|2950793216|0B611A3516A67299D60C12D9C2F20F2A|/</p></span></div><p>数字激活工具</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="">点我查看    </button><span class="hide-content"><p><a href="https://fm.solewe.com/index.php?dl=e7233e6263b076f060bf2c72fa94dfd2">https://fm.solewe.com/index.php?dl=e7233e6263b076f060bf2c72fa94dfd2</a></p></span></div><p>windows 10专业版系统操作流程还是比较简单的</p><ul><li>打开控制面板<ul><li>点击程序和功能<ul><li>点击打开或关闭windows功能<ul><li>找到NFS服务并勾选NFS客户端点击确定即可<br><img src= "/img/loading.gif" data-lazy-src="003.png"></li></ul></li></ul></li></ul></li></ul><p>然后打开CMD命令行查看NFS 服务器导出的所有共享。</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">showmount -e <span class="number">192</span>.<span class="number">168</span>.<span class="number">2</span>.<span class="number">200</span></span><br><span class="line">Export list <span class="keyword">for</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">2</span>.<span class="number">200</span>:</span><br><span class="line">/data/folder <span class="number">192</span>.<span class="number">168</span>.<span class="number">2</span>.<span class="number">0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><p>没有问题，然后开始挂载</p><ol><li>打开我的电脑</li><li>点击上面的计算机</li><li>点击映射网络驱动器</li><li>点击连接映射网络驱动器</li><li>在文件夹中输入 <code>\\192.168.2.200\data\folder</code> (格式：NFS服务器的IP地址\文件夹目录)</li><li>如果不需要了，可以右键点击断开网络驱动器即可。</li></ol><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li>CSDN:<a href="https://blog.csdn.net/aixiaoyang168/article/details/83782336">哎_小羊_168</a> 、<a href="https://blog.csdn.net/sean908/article/details/89208550?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control">sean908</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-NFS简介&quot;&gt;&lt;a href=&quot;#1-NFS简介&quot; class=&quot;headerlink&quot; title=&quot;1. NFS简介&quot;&gt;&lt;/a&gt;1. NFS简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://baike.baidu.com/it</summary>
      
    
    
    
    <category term="linux" scheme="https://leohu99.github.io/categories/linux/"/>
    
    <category term="windows 10专业版下载与激活" scheme="https://leohu99.github.io/categories/linux/windows-10%E4%B8%93%E4%B8%9A%E7%89%88%E4%B8%8B%E8%BD%BD%E4%B8%8E%E6%BF%80%E6%B4%BB/"/>
    
    
    <category term="centos" scheme="https://leohu99.github.io/tags/centos/"/>
    
    <category term="storage" scheme="https://leohu99.github.io/tags/storage/"/>
    
    <category term="windows" scheme="https://leohu99.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>彥宇專區~</title>
    <link href="https://leohu99.github.io/2020/11/29/%E5%BD%A5%E5%AE%87%E5%B0%88%E5%8D%80/"/>
    <id>https://leohu99.github.io/2020/11/29/%E5%BD%A5%E5%AE%87%E5%B0%88%E5%8D%80/</id>
    <published>2020-11-29T08:03:05.000Z</published>
    <updated>2020-11-30T20:36:27.992Z</updated>
    
    <content type="html"><![CDATA[<h2 id="歡迎來到智障廢區-彥宇專區"><a href="#歡迎來到智障廢區-彥宇專區" class="headerlink" title="歡迎來到智障廢區 - 彥宇專區~"></a>歡迎來到智障廢區 - 彥宇專區~</h2><p><img src= "/img/loading.gif" data-lazy-src="02.jpg"><br><img src= "/img/loading.gif" data-lazy-src="10.jpg"><br>嘎嘎嘎嘎~</p><p>沒錯，這一頁是專門為你準備的xD</p><p>驚不驚喜？意不意外~</p><p>不用謝我~這是我應該哈哈哈</p><p><img src= "/img/loading.gif" data-lazy-src="03.jpg"> </p><p>反正你這麼多好友都設有你的專區，那我也要有一個~雖然不在你身邊，沒得記錄你的沙雕日常😶但是我可以扒其他有你資訊的人啦😏</p><h2 id="NO-1-前言"><a href="#NO-1-前言" class="headerlink" title="NO.1 前言"></a>NO.1 前言</h2><p>首先，在2020年7月14號那天，你是我在Dcard上認識的第18個好友😝第4個加入我常用聊天軟體的好友，你應該感到慶幸🤣並不是每個人都能要到我的聯繫方式😏</p><p><img src= "/img/loading.gif" data-lazy-src="04.jpg"><br>第一次看到這張照片的時候，我覺得很有趣😂然後就保存了🤪</p><p>我畢業那天我分享了我的畢業照給你,然後我也想看看你的畢業照，之後你就丟了這張圖片給我~<br><img src= "/img/loading.gif" data-lazy-src="05.jpg"><br>超可愛的欸，超想掐你的臉der<br>xDDD<br>那時候的你真的超瘦的欸</p><h2 id="NO-2-論一隻豬的“苗条身材-吗🐷”"><a href="#NO-2-論一隻豬的“苗条身材-吗🐷”" class="headerlink" title="NO.2 論一隻豬的“苗条身材~吗🐷”"></a>NO.2 論一隻豬的“苗条身材~吗🐷”</h2><p>问： 論如何養成一隻豬？<br>查看答案</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="">点🐔一下    </button><span class="hide-content"><p>多吃少动~🤣</p></span></div><p>哈哈，剛好在光棍節那天你丟了張在象山步道拍的101，雖然我在yt上也看過別人去那裡玩，覺得很漂亮，想自己親自有一趟啦~可惜現在的我沒有錢錢QAQ<br><img src= "/img/loading.gif" data-lazy-src="06.jpg"></p><p>咳咳…扯遠了，回到正軌吗😏<br><img src= "/img/loading.gif" data-lazy-src="07.jpg"><br>一個胖子</p><p><img src= "/img/loading.gif" data-lazy-src="08.jpg"><br>還是一個胖子</p><p><img src= "/img/loading.gif" data-lazy-src="09.jpg"><br>再看看現在，還是胖子🤣<br>還是這麼大隻🐷你還是別減肥了吧😏<br>像我這種怎麼吃都不會胖的~你學不來的🤪<br>老老實實當一隻豬豬就好了🐷🐷</p><h2 id="小影片"><a href="#小影片" class="headerlink" title="小影片~"></a>小影片~</h2><p>哈哈哈哈哈哈😂<br><video src='12.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'></video></p>]]></content>
    
    
    <summary type="html">智障廢區</summary>
    
    
    
    <category term="彥宇專區~" scheme="https://leohu99.github.io/categories/%E5%BD%A5%E5%AE%87%E5%B0%88%E5%8D%80/"/>
    
    
    <category term="我的智障朋友" scheme="https://leohu99.github.io/tags/%E6%88%91%E7%9A%84%E6%99%BA%E9%9A%9C%E6%9C%8B%E5%8F%8B/"/>
    
  </entry>
  
  <entry>
    <title>这是一篇的文章表面图的测试文章</title>
    <link href="https://leohu99.github.io/2020/11/29/%E8%BF%99%E6%98%AF%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>https://leohu99.github.io/2020/11/29/%E8%BF%99%E6%98%AF%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</id>
    <published>2020-11-28T17:25:32.000Z</published>
    <updated>2020-11-30T18:58:30.878Z</updated>
    
    <content type="html"><![CDATA[<p>这真的这是一篇测试用的文章啊！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这真的这是一篇测试用的文章啊！！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Hexo" scheme="https://leohu99.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://leohu99.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://leohu99.github.io/2020/11/28/hello-world/"/>
    <id>https://leohu99.github.io/2020/11/28/hello-world/</id>
    <published>2020-11-28T07:29:47.040Z</published>
    <updated>2020-11-28T07:29:47.040Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
